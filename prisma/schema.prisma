// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String  @id @default(cuid())
  famillyName String?
  givenName   String?
  email       String  @unique

  // Entreprises que ce user a créées
  createdCompanies Company[] @relation("CompanyCreators")

  // Entreprises où ce user est employé
  companies UserOnCompany[]
}

model Company {
  id    String @id @default(cuid())
  name  String @unique
  rooms Room[]

  // Créateur de l’entreprise
  createdById String
  createdBy   User   @relation("CompanyCreators", fields: [createdById], references: [id])

  // Employés de l’entreprise (via table de jointure)
  employees UserOnCompany[]
}

model Room {
  id          String  @id @default(cuid())
  name        String
  capacity    Int
  description String?
  imgUrl      String? @default("/placeholder.jpg")
  companyId   String
  company     Company @relation(fields: [companyId], references: [id])
}

model UserOnCompany {
  userId    String
  companyId String

  user    User    @relation(fields: [userId], references: [id])
  company Company @relation(fields: [companyId], references: [id])

  @@id([userId, companyId]) // Clé composée pour éviter les doublons
}
